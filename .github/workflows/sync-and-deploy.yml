name: Sync, Build, and Deploy Portfolio

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  schedule:
    # Daily sync at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  sync-build-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.TOKEN_GITHUB }}

    - name: Setup environment
      run: |
        echo "GITHUB_TOKEN=${{ secrets.TOKEN_GITHUB }}" >> .env
        echo "GITHUB_USERNAME=tham-le" >> .env
        echo "HUGO_ENV=production" >> .env

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq curl

    - name: Sync all content
      run: |
        chmod +x ./scripts/sync-all.sh
        ./scripts/sync-all.sh
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
    
    # - name: Prepare CTF Content
    #   run: |
    #     chmod +x ./scripts/prepare_hugo.py
    #     python3 ./scripts/prepare_hugo.py
    
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v3
      with:
        hugo-version: '0.129.0'
        extended: true
    
    - name: Test Hugo build
      run: |
        echo "üîç Testing Hugo build..."
        hugo --minify --environment production
        echo "‚úÖ Hugo build successful!"
    
    - name: Verify build output
      run: |
        echo "üîç Verifying build output..."
        if [ ! -d "public" ]; then
          echo "‚ùå Public directory not created"
          exit 1
        fi
        
        if [ ! -f "public/index.html" ]; then
          echo "‚ùå Index.html not generated"
          exit 1
        fi
        
        echo "‚úÖ Build verification successful!"
        echo "üìä Build statistics:"
        echo "- Total files: $(find public -type f | wc -l)"
        echo "- HTML files: $(find public -name "*.html" | wc -l)"
        echo "- CSS files: $(find public -name "*.css" | wc -l)"
        echo "- JS files: $(find public -name "*.js" | wc -l)"
    
    - name: Deploy to Firebase
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_THAMLE_PORTFOLIO }}'
        projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
        channelId: live
