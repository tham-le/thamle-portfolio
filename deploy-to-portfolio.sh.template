#!/bin/bash

#############################################################################
# Deploy Quartz Notes to Hugo Portfolio
#############################################################################
# This script builds the Obsidian notes with Quartz and copies them to the
# Hugo portfolio repository for deployment.
#
# Usage:
#   ./deploy-to-portfolio.sh [portfolio-path]
#
# Arguments:
#   portfolio-path: Path to the portfolio repository (default: ../thamle-portfolio)
#############################################################################

set -e  # Exit on error

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Default paths (adjust as needed)
PORTFOLIO_PATH="${1:-../thamle-portfolio}"
NOTES_OUTPUT_DIR="public"
PORTFOLIO_NOTES_DIR="${PORTFOLIO_PATH}/public/notes"

#############################################################################
# Helper Functions
#############################################################################

print_step() {
    echo -e "${BLUE}==>${NC} $1"
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}!${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

check_command() {
    if ! command -v "$1" &> /dev/null; then
        print_error "Required command '$1' not found. Please install it first."
        exit 1
    fi
}

#############################################################################
# Pre-flight Checks
#############################################################################

print_step "Running pre-flight checks..."

# Check if we're in a notes repository (has quartz.config.ts)
if [ ! -f "quartz.config.ts" ]; then
    print_error "quartz.config.ts not found. Are you in the notes repository?"
    exit 1
fi
print_success "Found quartz.config.ts"

# Check for required commands
check_command "npx"
check_command "node"

# Check if portfolio path exists
if [ ! -d "$PORTFOLIO_PATH" ]; then
    print_error "Portfolio repository not found at: $PORTFOLIO_PATH"
    print_warning "Usage: $0 [path-to-portfolio-repo]"
    exit 1
fi
print_success "Portfolio repository found at: $PORTFOLIO_PATH"

# Check if portfolio has public directory
if [ ! -d "$PORTFOLIO_PATH/public" ]; then
    print_warning "Portfolio public directory doesn't exist yet. Creating it..."
    mkdir -p "$PORTFOLIO_PATH/public"
fi

#############################################################################
# Build Notes with Quartz
#############################################################################

print_step "Building notes with Quartz..."

# Clean previous build
if [ -d "$NOTES_OUTPUT_DIR" ]; then
    print_warning "Cleaning previous build..."
    rm -rf "$NOTES_OUTPUT_DIR"
fi

# Build with Quartz
if npx quartz build; then
    print_success "Quartz build completed successfully"
else
    print_error "Quartz build failed"
    exit 1
fi

# Verify build output exists
if [ ! -d "$NOTES_OUTPUT_DIR" ]; then
    print_error "Build output directory not found: $NOTES_OUTPUT_DIR"
    exit 1
fi

#############################################################################
# Copy Built Notes to Portfolio
#############################################################################

print_step "Copying built notes to portfolio..."

# Remove old notes if they exist
if [ -d "$PORTFOLIO_NOTES_DIR" ]; then
    print_warning "Removing old notes from portfolio..."
    rm -rf "$PORTFOLIO_NOTES_DIR"
fi

# Create notes directory in portfolio
mkdir -p "$PORTFOLIO_NOTES_DIR"

# Copy built files
if cp -r "$NOTES_OUTPUT_DIR"/* "$PORTFOLIO_NOTES_DIR/"; then
    print_success "Notes copied to: $PORTFOLIO_NOTES_DIR"
else
    print_error "Failed to copy notes to portfolio"
    exit 1
fi

# Count files copied
FILE_COUNT=$(find "$PORTFOLIO_NOTES_DIR" -type f | wc -l)
print_success "Copied $FILE_COUNT files"

#############################################################################
# Summary
#############################################################################

echo ""
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${GREEN}Deployment Successful!${NC}"
echo -e "${GREEN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""
echo "📁 Notes built and copied to: $PORTFOLIO_NOTES_DIR"
echo "📊 Total files: $FILE_COUNT"
echo ""
echo "Next steps:"
echo "  1. cd $PORTFOLIO_PATH"
echo "  2. Test locally: firebase serve"
echo "  3. Deploy: firebase deploy"
echo ""
echo -e "${BLUE}Note:${NC} The notes are now in your portfolio's public/ directory."
echo "      You can commit and push the portfolio repo to deploy the changes."
echo ""
